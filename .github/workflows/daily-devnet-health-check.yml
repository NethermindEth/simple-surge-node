name: Daily Devnet Health Check

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  run-health-check:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bc jq

      - name: Run health check script
        id: health_check
        run: |
          ./script/test-health-check.sh
        continue-on-error: true

      - name: Upload deployment artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: deployment-artifacts
          path: |
            deployment/*.json
            deployment/*.lock
          retention-days: 7

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: execution-logs
          path: |
            execution-data/logs
          retention-days: 7

      - name: Check health check result
        if: steps.health_check.outcome == 'failure'
        run: |
          echo "Health check failed"
          exit 1

  notify-on-failure:
    runs-on: ubuntu-latest
    needs: [run-health-check]
    if: failure()

    steps:
      - name: Create issue on failure
        uses: actions/github-script@v7
        with:
          script: |
            const title = `Daily Devnet Health Check Failed - ${new Date().toISOString().split('T')[0]}`;
            const body = `The daily devnet health check failed. Please investigate.

            **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            **Status:** ${{ needs.run-health-check.result }}

            See the workflow artifacts for deployment artifacts and execution logs.
            `;

            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'daily-health-check'
            });

            const existingIssue = issues.data.find(issue => issue.title.includes('Daily Devnet Health Check Failed'));

            if (!existingIssue) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['daily-health-check', 'bug']
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                body: `Another failure occurred:\n\n${body}`
              });
            }
