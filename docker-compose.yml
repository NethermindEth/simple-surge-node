services:
  nethermind_execution_client:
    image: nethermind/nethermind:latest
    container_name: l2-nethermind-execution-client
    restart: unless-stopped
    pull_policy: always
    stop_grace_period: 3m
    tty: true
    volumes:
      - ./execution-data:/data/surge
      - ./static/jwtsecret:/tmp/jwt/jwtsecret
      - ${CHAINSPEC_PATH_ON_HOST:-./static/hoodi/chainspec.json}:/chainspec.json
    networks:
      - surge
    ports:
      - ${L2_NETWORK_DISCOVERY_PORT}:${L2_NETWORK_DISCOVERY_PORT}/tcp
      - ${L2_NETWORK_DISCOVERY_PORT}:${L2_NETWORK_DISCOVERY_PORT}/udp
      - ${L2_METRICS_PORT}:${L2_METRICS_PORT}
      - ${L2_HTTP_PORT}:${L2_HTTP_PORT}
      - ${L2_WS_PORT}:${L2_WS_PORT}
      - ${L2_ENGINE_API_PORT}:${L2_ENGINE_API_PORT}
    command:
      - --config=none
      - --datadir=/data/surge
      - --Init.ChainSpecPath=/chainspec.json
      - --Init.GenesisHash=${L2_GENESIS_HASH}
      - --Init.DiscoveryEnabled=false
      - --Metrics.Enabled=true
      - --Metrics.ExposePort=${L2_METRICS_PORT}
      - --JsonRpc.Enabled=true
      - --JsonRpc.EnabledModules=[debug,eth,net,web3,txpool,rpc,subscribe,trace,personal,proof,parity,health]
      - --JsonRpc.Host=0.0.0.0
      - --JsonRpc.Port=${L2_HTTP_PORT}
      - --JsonRpc.WebSocketsPort=${L2_WS_PORT}
      - --JsonRpc.JwtSecretFile=/tmp/jwt/jwtsecret
      - --JsonRpc.EngineHost=0.0.0.0
      - --JsonRpc.EnginePort=${L2_ENGINE_API_PORT}
      - --Network.DiscoveryPort=${L2_NETWORK_DISCOVERY_PORT}
      - --Network.P2PPort=${L2_NETWORK_DISCOVERY_PORT}
      - --Sync.FastSync=false
      - --Sync.SnapSync=false
      - --HealthChecks.Enabled=true
      - --log=${NETHERMIND_LOG_LEVEL}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      com.kurtosistech.custom.metrics_enabled: "true"
      com.kurtosistech.custom.metrics_port: "${L2_METRICS_PORT}"
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'echo > /dev/tcp/localhost/8547'"]
      interval: 2s
      timeout: 2s
      retries: 15
      start_period: 10s
    profiles:
      - driver
      - proposer
      - prover
      - spammer
      - blockscout

  taiko_client_driver:
    image: nethermind.jfrog.io/modular-oci-local-dev/taiko-client:sha-988aead
    container_name: l2-taiko-consensus-client
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - nethermind_execution_client
    volumes:
      - ./execution-data:/data/surge
      - ./static/jwtsecret:/tmp/jwt/jwtsecret
      - ./script:/script
    ports:
      - 6060:6060
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    entrypoint:
      - /bin/sh
      - -c
      - "/script/start-driver.sh"
    networks:
      - surge
    labels:
      com.kurtosistech.custom.metrics_enabled: "true"
      com.kurtosistech.custom.metrics_port: "6060"
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - driver
      - proposer
      - prover
      - spammer
      - blockscout

  taiko_client_proposer:
    image: nethermind.jfrog.io/modular-oci-local-dev/taiko-client:sha-988aead
    container_name: l2-taiko-proposer-client
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - nethermind_execution_client
      - taiko_client_driver
    volumes:
      - ./execution-data:/data/taiko-nethermind
      - ./static/jwtsecret:/tmp/jwt/jwtsecret
      - ./script:/script
    ports:
      - 6061:6061
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    entrypoint:
      - /bin/sh
      - -c
      - "/script/start-proposer.sh"
    networks:
      - surge
    labels:
      com.kurtosistech.custom.metrics_enabled: "true"
      com.kurtosistech.custom.metrics_port: "6061"
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - proposer
      - spammer
      - blockscout
  
  taiko_client_prover_relayer:
    image: nethermind.jfrog.io/modular-oci-local-dev/taiko-client:sha-988aead
    container_name: l2-taiko-prover-relayer-client
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - nethermind_execution_client
      - taiko_client_driver
    volumes:
      - ./static/jwtsecret:/tmp/jwt/jwtsecret
      - ./script:/script
    ports:
      - 6062:6062
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    entrypoint:
      - /bin/sh
      - -c
      - "/script/start-prover-relayer.sh"
    networks:
      - surge
    labels:
      com.kurtosistech.custom.metrics_enabled: "true"
      com.kurtosistech.custom.metrics_port: "6062"
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - prover
 
  tx-spammer:
    image: ethpandaops/tx-fuzz:master
    container_name: l2-tx-spammer
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - nethermind_execution_client
      - taiko_client_driver
      - taiko_client_proposer
    command:
      - "spam"
      - "--rpc=http://l2-nethermind-execution-client:${L2_HTTP_PORT}"
      - "--gaslimit=10000000"
      - "--sk=0x94eb3102993b41ec55c241060f47daa0f6372e2e3ad7e91612ae36c364042e44"
    networks:
      - surge
    profiles:
      - spammer

  blockscout-postgres:
    image: postgres:alpine
    container_name: l2-blockscout-postgres
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - nethermind_execution_client
      - taiko_client_driver
    volumes:
      - ./blockscout-postgres-data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_DB: blockscout
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: MyPassword1!
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      GOSU_VERSION: 1.17
      PG_MAJOR: 17
      PG_VERSION: 17.5
      PG_SHA256: fcb7ab38e23b264d1902cb25e6adafb4525a6ebcbd015434aeef9eda80f528d8
      DOCKER_PG_LLVM_DEPS: llvm19-dev \t\tclang19
      PGDATA: /var/lib/postgresql/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      - "-c"
      - "max_connections=1000"
    networks:
      - surge
    profiles:
      - blockscout

  blockscout-verifer:
    image: ghcr.io/blockscout/smart-contract-verifier:latest
    container_name: l2-blockscout-verif
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - nethermind_execution_client
      - taiko_client_driver
    ports:
      - ${VERIFIER_PORT}:${VERIFIER_PORT}
    environment:
      SMART_CONTRACT_VERIFIER__SERVER__HTTP__ADDR: 0.0.0.0:${VERIFIER_PORT}
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      APP_USER: app
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      - "./smart-contract-verifier-server"
    networks:
      - surge
    profiles:
      - blockscout

  blockscout:
    image: ghcr.io/blockscout/blockscout:latest
    container_name: l2-blockscout
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - nethermind_execution_client
      - taiko_client_driver
    ports:
      - ${BLOCKSCOUT_PORT}:${BLOCKSCOUT_PORT}
    environment:
      MICROSERVICE_SC_VERIFIER_URL: http://l2-blockscout-verif:${VERIFIER_PORT}/api
      ECTO_USE_SSL: false
      ETHEREUM_JSONRPC_HTTP_URL: http://l2-nethermind-execution-client:${L2_HTTP_PORT}/
      DATABASE_URL: postgresql://postgres:MyPassword1!@l2-blockscout-postgres:5432/blockscout
      ETHEREUM_JSONRPC_VARIANT: nethermind
      ETHEREUM_JSONRPC_TRACE_URL: http://l2-nethermind-execution-client:${L2_HTTP_PORT}/
      SUBNETWORK: Surge
      API_V2_ENABLED: true
      PORT: ${BLOCKSCOUT_PORT}
      NETWORK: Surge
      MICROSERVICE_SC_VERIFIER_TYPE: sc_verifier
      INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: true
      COIN: ETH
      MICROSERVICE_SC_VERIFIER_ENABLED: true
      SECRET_KEY_BASE: 56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      DISABLE_WEBAPP: true
      ADMIN_PANEL_ENABLED: false
      DISABLE_API:
      API_V1_READ_METHODS_DISABLED:
      API_V1_WRITE_METHODS_DISABLED:
      CHAIN_TYPE:
      BRIDGED_TOKENS_ENABLED:
      API_GRAPHQL_MAX_COMPLEXITY:
      RELEASE_VERSION: 8.1.1
      BLOCKSCOUT_VERSION: v8.1.1
    command:
      - "/bin/sh"
      - "-c"
      - "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - surge
    profiles:
      - blockscout

  blockscout-frontend:
    image: ghcr.io/blockscout/frontend:latest
    container_name: l2-blockscout-frontend
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - nethermind_execution_client
      - taiko_client_driver
    ports:
      - ${BLOCKSCOUT_FRONTEND_PORT}:${BLOCKSCOUT_FRONTEND_PORT}
    environment:
      PORT: ${BLOCKSCOUT_FRONTEND_PORT}
      NEXT_PUBLIC_NETWORK_ICON: https://docs.surge.wtf/img/favicon.ico
      NEXT_PUBLIC_NETWORK_ID: ${L2_CHAIN_ID}
      NEXT_PUBLIC_APP_PROTOCOL: http
      HOSTNAME: 0.0.0.0
      NEXT_PUBLIC_AD_BANNER_PROVIDER: none
      NEXT_PUBLIC_HAS_BEACON_CHAIN: false
      NEXT_PUBLIC_GAS_TRACKER_ENABLED: true
      # NEXT_PUBLIC_DISABLE_EXCHANGE_RATES: true
      NEXT_PUBLIC_NETWORK_NAME: Surge
      NEXT_PUBLIC_APP_HOST: 127.0.0.1
      NEXT_PUBLIC_API_PROTOCOL: http
      NEXT_PUBLIC_API_HOST: localhost:${BLOCKSCOUT_PORT}
      NEXT_PUBLIC_USE_NEXT_JS_PROXY: false
      NEXT_PUBLIC_NETWORK_RPC_URL: http://l2-nethermind-execution-client:${L2_HTTP_PORT}
      NEXT_PUBLIC_IS_TESTNET: true
      NEXT_PUBLIC_API_WEBSOCKET_PROTOCOL: ws
      NEXT_PUBLIC_APP_PORT: ${BLOCKSCOUT_FRONTEND_PORT}
      NEXT_PUBLIC_NETWORK_VERIFICATION_TYPE: validation
      NEXT_PUBLIC_AD_TEXT_PROVIDER: none
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      NODE_VERSION: 22.11.0
      YARN_VERSION: 1.22.22
      ENVS_PRESET:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - surge
    profiles:
      - blockscout

networks:
  surge:
    name: surge-network
