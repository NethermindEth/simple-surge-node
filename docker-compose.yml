services:
  surge-l1-deployer:
    image: nethermind.jfrog.io/modular-oci-local-dev/taiko-protocol:sha-109f167
    container_name: surge-l1-deployer
    pull_policy: always
    volumes:
      - ./deployer:/deployer
      - ./deployment:/deployment
    entrypoint:
      - /bin/sh
      - -c
      - /deployer/deploy-surge-l1.sh
    env_file:
      - .env
    environment:
      USE_TIMELOCKED_OWNER: ${USE_TIMELOCKED_OWNER:-false}
      SHOULD_SETUP_VERIFIERS: ${SHOULD_SETUP_VERIFIERS:-false}
      BROADCAST: ${BROADCAST:-false}
    networks:
      - surge
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'test -f /app/deployments/deploy_l1.json'"]
      interval: 2s
      timeout: 2s
      retries: 15
      start_period: 10s
    profiles:
      - l1-deployer

  surge-sgx-register:
    image: nethermind.jfrog.io/modular-oci-local-dev/taiko-protocol:sha-109f167
    container_name: surge-sgx-register
    pull_policy: always
    volumes:
      - ./deployer:/deployer
    entrypoint:
      - /bin/sh
      - -c
      - /deployer/register-sgx.sh
    env_file:
      - .env
    environment:
      BROADCAST: ${BROADCAST:-false}
    networks:
      - surge
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - sgx-register

  surge-risc0-register:
    image: nethermind.jfrog.io/modular-oci-local-dev/taiko-protocol:sha-109f167
    container_name: surge-risc0-register
    pull_policy: always
    volumes:
      - ./deployer:/deployer
    entrypoint:
      - /bin/sh
      - -c
      - /deployer/register-risc0.sh
    env_file:
      - .env
    environment:
      GAS_LIMIT: ${GAS_LIMIT:-100000}
      RISC0_GROTH16_VERIFIER: ${RISC0_GROTH16_VERIFIER:-0x0000000000000000000000000000000000000000}
      RISC0_AGGREGATION_IMAGE_ID: ${RISC0_AGGREGATION_IMAGE_ID:-0x00dfdb4cc33bb068dce12585b8ecfcc8c3ae194ffaf6d19e0ebfd3fc33145c7a}
      RISC0_BLOCK_PROVING_IMAGE_ID: ${RISC0_BLOCK_PROVING_IMAGE_ID:-0x002eb51e99132ea02f27349345fe7e98c6867beab29a2426d1e4f693e2857bcd}
    networks:
      - surge
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - risc0-register

  surge-sp1-register:
    image: nethermind.jfrog.io/modular-oci-local-dev/taiko-protocol:sha-109f167
    container_name: surge-sp1-register
    pull_policy: always
    volumes:
      - ./deployer:/deployer
    entrypoint:
      - /bin/sh
      - -c
      - /deployer/register-sp1.sh
    env_file:
      - .env
    environment:
      GAS_LIMIT: ${GAS_LIMIT:-100000}
      SUCCINCT_VERIFIER: ${SUCCINCT_VERIFIER:-0x0000000000000000000000000000000000000000}
      SP1_BLOCK_PROVING_PROGRAM_VKEY: ${SP1_BLOCK_PROVING_PROGRAM_VKEY:-7551aa7009644e503ffa7fce53f657264a3a1b45516afc5b026ff7e43c10d62a}
      SP1_AGGREGATION_PROGRAM_VKEY: ${SP1_AGGREGATION_PROGRAM_VKEY:-0x000795db478eeeb7bef37247eb93389ba2a4e6c1cbe59a49afc3bd6ac2ad27ba}
    networks:
      - surge
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - sp1-register

  surge-bond-depositer:
    image: nethermind.jfrog.io/modular-oci-local-dev/taiko-protocol:sha-109f167
    container_name: surge-bond-depositer
    pull_policy: always
    volumes:
      - ./deployer:/deployer
    entrypoint:
      - /bin/sh
      - -c
      - /deployer/deposit-bond.sh
    env_file:
      - .env
    environment:
      TAIKO_INBOX: ${TAIKO_INBOX:-0xC3c933d714FbD79e1D6cA89AA1126FC52a64873b}
      BOND_AMOUNT: ${BROADCAST:-1000000000000000000}
      GAS_LIMIT: ${GAS_LIMIT:-100000}
    networks:
      - surge
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - bond-depositer

  surge-l2-deployer:
    image: nethermind.jfrog.io/modular-oci-local-dev/taiko-protocol:sha-109f167
    container_name: surge-l2-deployer
    pull_policy: always
    depends_on:
      - nethermind_execution_client
      - taiko_client_driver
      - taiko_client_proposer
    entrypoint:
      - ./script/layer2/surge/setup_surge_l2.sh
    env_file:
      - .env
    environment:
      L1_BRIDGE: ${L1_BRIDGE:-0x75689954C665396167a6D372aC9154814FD30Fa4}
      L1_SIGNAL_SERVICE: ${L1_SIGNAL_SERVICE:-0xefc92277E9166C27529CCD889143C6d4B6171595}
      L1_ERC1155_VAULT: ${L1_ERC1155_VAULT:-0x2dEf0967ccF7F1C5088Afe17ba0eF3D54409c503}
      L1_ERC20_VAULT: ${L1_ERC20_VAULT:-0x56e51543785bb41f8f6244aaF09a410d2C22D9A4}
      L1_ERC721_VAULT: ${L1_ERC721_VAULT:-0xB00AF8098B4d949AC0C8bfcf5eaCd4FF07d05D28}
      L1_OWNER: ${L1_OWNER:-0x3e95dFbBaF6B348396E6674C7871546dCC568e56}
      FORK_URL: http://l2-nethermind-execution-client:${L2_HTTP_PORT}
      BROADCAST: ${BROADCAST:-false}
    networks:
      - surge
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'test -f /app/deployments/setup_l2.json'"]
      interval: 2s
      timeout: 2s
      retries: 15
      start_period: 10s
    profiles:
      - l2-deployer

  nethermind_execution_client:
    image: nethermindeth/nethermind:taiko-new-api-2
    container_name: l2-nethermind-execution-client
    restart: unless-stopped
    pull_policy: always
    stop_grace_period: 3m
    tty: true
    volumes:
      - ./execution-data:/data/surge
      - ./static/jwtsecret:/tmp/jwt/jwtsecret
      - ${CHAINSPEC_PATH_ON_HOST:-./static/hoodi/chainspec.json}:/chainspec.json
    networks:
      - surge
    ports:
      - ${L2_NETWORK_DISCOVERY_PORT}:${L2_NETWORK_DISCOVERY_PORT}/tcp
      - ${L2_NETWORK_DISCOVERY_PORT}:${L2_NETWORK_DISCOVERY_PORT}/udp
      - ${L2_METRICS_PORT}:${L2_METRICS_PORT}
      - ${L2_HTTP_PORT}:${L2_HTTP_PORT}
      - ${L2_WS_PORT}:${L2_WS_PORT}
      - ${L2_ENGINE_API_PORT}:${L2_ENGINE_API_PORT}
    command:
      - --config=none
      - --datadir=/data/surge
      - --Init.ChainSpecPath=/chainspec.json
      - --Init.GenesisHash=${L2_GENESIS_HASH}
      - --Init.DiscoveryEnabled=false
      - --Metrics.Enabled=true
      - --Metrics.ExposePort=${L2_METRICS_PORT}
      - --JsonRpc.Enabled=true
      - --JsonRpc.EnabledModules=[debug,eth,net,web3,txpool,rpc,subscribe,trace,personal,proof,parity,health]
      - --JsonRpc.Host=0.0.0.0
      - --JsonRpc.Port=${L2_HTTP_PORT}
      - --JsonRpc.WebSocketsPort=${L2_WS_PORT}
      - --JsonRpc.JwtSecretFile=/tmp/jwt/jwtsecret
      - --JsonRpc.EngineHost=0.0.0.0
      - --JsonRpc.EnginePort=${L2_ENGINE_API_PORT}
      - --Network.DiscoveryPort=${L2_NETWORK_DISCOVERY_PORT}
      - --Network.P2PPort=${L2_NETWORK_DISCOVERY_PORT}
      - --Sync.FastSync=false
      - --Sync.SnapSync=false
      - --HealthChecks.Enabled=true
      - --log=${NETHERMIND_LOG_LEVEL}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      com.kurtosistech.custom.metrics_enabled: "true"
      com.kurtosistech.custom.metrics_port: "${L2_METRICS_PORT}"
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'echo > /dev/tcp/localhost/8547'"]
      interval: 2s
      timeout: 2s
      retries: 15
      start_period: 10s
    profiles:
      - driver
      - proposer
      - prover
      - spammer
      - blockscout
      - l2-deployer

  taiko_client_driver:
    image: nethermind.jfrog.io/modular-oci-local-dev/taiko-client:sha-2728dac
    container_name: l2-taiko-consensus-client
    restart: unless-stopped
    pull_policy: always
    depends_on:
      nethermind_execution_client:
        condition: service_healthy
        restart: true
    volumes:
      - ./execution-data:/data/surge
      - ./static/jwtsecret:/tmp/jwt/jwtsecret
      - ./script:/script
    ports:
      - 6060:6060
    env_file:
      - .env
    environment:
      TAIKO_INBOX: ${TAIKO_INBOX:-0xC3c933d714FbD79e1D6cA89AA1126FC52a64873b}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    entrypoint:
      - /bin/sh
      - -c
      - "/script/start-driver.sh"
    networks:
      - surge
    labels:
      com.kurtosistech.custom.metrics_enabled: "true"
      com.kurtosistech.custom.metrics_port: "6060"
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - driver
      - proposer
      - prover
      - spammer
      - blockscout
      - l2-deployer

  taiko_client_proposer:
    image: nethermind.jfrog.io/modular-oci-local-dev/taiko-client:sha-2728dac
    container_name: l2-taiko-proposer-client
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - nethermind_execution_client
      - taiko_client_driver
    volumes:
      - ./execution-data:/data/taiko-nethermind
      - ./static/jwtsecret:/tmp/jwt/jwtsecret
      - ./script:/script
    ports:
      - 6061:6061
    env_file:
      - .env
    environment:
      TAIKO_INBOX: ${TAIKO_INBOX:-0xC3c933d714FbD79e1D6cA89AA1126FC52a64873b}
      L1_SIGNAL_SERVICE: ${L1_SIGNAL_SERVICE:-0xefc92277E9166C27529CCD889143C6d4B6171595}
      L1_BRIDGE: ${L1_BRIDGE:-0x75689954C665396167a6D372aC9154814FD30Fa4}
      TAIKO_WRAPPER: ${TAIKO_WRAPPER:-0x9224cFB28d3f21Ab56591d970F2DC432F4CE4900}
      FORCED_INCLUSION_STORE: ${FORCED_INCLUSION_STORE:-0x2386d67200b89f63735DE6Abb22F5c5cA863902C}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    entrypoint:
      - /bin/sh
      - -c
      - "/script/start-proposer.sh"
    networks:
      - surge
    labels:
      com.kurtosistech.custom.metrics_enabled: "true"
      com.kurtosistech.custom.metrics_port: "6061"
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - proposer
      - spammer
      - l2-deployer
  
  taiko_client_prover_relayer:
    image: nethermind.jfrog.io/modular-oci-local-dev/taiko-client:sha-2728dac
    container_name: l2-taiko-prover-relayer-client
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - nethermind_execution_client
      - taiko_client_driver
    volumes:
      - ./static/jwtsecret:/tmp/jwt/jwtsecret
      - ./script:/script
    ports:
      - 6062:6062
    env_file:
      - .env
    environment:
      TAIKO_INBOX: ${TAIKO_INBOX:-0xC3c933d714FbD79e1D6cA89AA1126FC52a64873b}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    entrypoint:
      - /bin/sh
      - -c
      - "/script/start-prover-relayer.sh"
    networks:
      - surge
    labels:
      com.kurtosistech.custom.metrics_enabled: "true"
      com.kurtosistech.custom.metrics_port: "6062"
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - prover
 
  tx-spammer:
    image: ethpandaops/tx-fuzz:master
    container_name: l2-tx-spammer
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - nethermind_execution_client
      - taiko_client_driver
      - taiko_client_proposer
    command:
      - "spam"
      - "--rpc=http://l2-nethermind-execution-client:${L2_HTTP_PORT}"
      - "--gaslimit=10000000"
      - "--sk=0x94eb3102993b41ec55c241060f47daa0f6372e2e3ad7e91612ae36c364042e44"
    networks:
      - surge
    labels:
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - spammer

  blockscout-postgres:
    image: postgres:alpine
    container_name: l2-blockscout-postgres
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - nethermind_execution_client
      - taiko_client_driver
    volumes:
      - ./blockscout-postgres-data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_DB: blockscout
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: MyPassword1!
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      GOSU_VERSION: 1.17
      PG_MAJOR: 17
      PG_VERSION: 17.5
      PG_SHA256: fcb7ab38e23b264d1902cb25e6adafb4525a6ebcbd015434aeef9eda80f528d8
      DOCKER_PG_LLVM_DEPS: llvm19-dev \t\tclang19
      PGDATA: /var/lib/postgresql/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      - "-c"
      - "max_connections=1000"
    networks:
      - surge
    labels:
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - blockscout

  blockscout-verifer:
    image: ghcr.io/blockscout/smart-contract-verifier:latest
    container_name: l2-blockscout-verif
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - nethermind_execution_client
      - taiko_client_driver
    ports:
      - ${VERIFIER_PORT}:${VERIFIER_PORT}
    environment:
      SMART_CONTRACT_VERIFIER__SERVER__HTTP__ADDR: 0.0.0.0:${VERIFIER_PORT}
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      APP_USER: app
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      - "./smart-contract-verifier-server"
    networks:
      - surge
    labels:
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - blockscout

  blockscout:
    image: ghcr.io/blockscout/blockscout:latest
    container_name: l2-blockscout
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - nethermind_execution_client
      - taiko_client_driver
    ports:
      - ${BLOCKSCOUT_PORT}:${BLOCKSCOUT_PORT}
    environment:
      MICROSERVICE_SC_VERIFIER_URL: http://l2-blockscout-verif:${VERIFIER_PORT}/api
      ECTO_USE_SSL: false
      ETHEREUM_JSONRPC_HTTP_URL: http://l2-nethermind-execution-client:${L2_HTTP_PORT}/
      DATABASE_URL: postgresql://postgres:MyPassword1!@l2-blockscout-postgres:5432/blockscout
      ETHEREUM_JSONRPC_VARIANT: nethermind
      ETHEREUM_JSONRPC_TRACE_URL: http://l2-nethermind-execution-client:${L2_HTTP_PORT}/
      SUBNETWORK: Surge
      API_V2_ENABLED: true
      PORT: ${BLOCKSCOUT_PORT}
      NETWORK: Surge
      MICROSERVICE_SC_VERIFIER_TYPE: sc_verifier
      INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: true
      COIN: ETH
      MICROSERVICE_SC_VERIFIER_ENABLED: true
      SECRET_KEY_BASE: 56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      DISABLE_WEBAPP: true
      ADMIN_PANEL_ENABLED: false
      DISABLE_API:
      API_V1_READ_METHODS_DISABLED:
      API_V1_WRITE_METHODS_DISABLED:
      CHAIN_TYPE:
      BRIDGED_TOKENS_ENABLED:
      API_GRAPHQL_MAX_COMPLEXITY:
      RELEASE_VERSION: 8.1.1
      BLOCKSCOUT_VERSION: v8.1.1
    command:
      - "/bin/sh"
      - "-c"
      - "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - surge
    labels:
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - blockscout

  blockscout-frontend:
    image: ghcr.io/blockscout/frontend:latest
    container_name: l2-blockscout-frontend
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - nethermind_execution_client
      - taiko_client_driver
    ports:
      - ${BLOCKSCOUT_FRONTEND_PORT}:${BLOCKSCOUT_FRONTEND_PORT}
    environment:
      PORT: ${BLOCKSCOUT_FRONTEND_PORT}
      NEXT_PUBLIC_NETWORK_ICON: https://docs.surge.wtf/img/favicon.ico
      NEXT_PUBLIC_NETWORK_ID: ${L2_CHAINID}
      NEXT_PUBLIC_APP_PROTOCOL: http
      HOSTNAME: 0.0.0.0
      NEXT_PUBLIC_AD_BANNER_PROVIDER: none
      NEXT_PUBLIC_HAS_BEACON_CHAIN: false
      NEXT_PUBLIC_GAS_TRACKER_ENABLED: true
      # NEXT_PUBLIC_DISABLE_EXCHANGE_RATES: true
      NEXT_PUBLIC_NETWORK_NAME: Surge
      NEXT_PUBLIC_APP_HOST: 127.0.0.1
      NEXT_PUBLIC_API_PROTOCOL: http
      NEXT_PUBLIC_API_HOST: ${BLOCKSCOUT_API_HOST}:${BLOCKSCOUT_PORT}
      NEXT_PUBLIC_USE_NEXT_JS_PROXY: false
      NEXT_PUBLIC_NETWORK_RPC_URL: http://l2-nethermind-execution-client:${L2_HTTP_PORT}
      NEXT_PUBLIC_IS_TESTNET: true
      NEXT_PUBLIC_API_WEBSOCKET_PROTOCOL: ws
      NEXT_PUBLIC_APP_PORT: ${BLOCKSCOUT_FRONTEND_PORT}
      NEXT_PUBLIC_NETWORK_VERIFICATION_TYPE: validation
      NEXT_PUBLIC_AD_TEXT_PROVIDER: none
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      NODE_VERSION: 22.11.0
      YARN_VERSION: 1.22.22
      ENVS_PRESET:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - surge
    labels:
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - blockscout

  # Relayer infrastructure services
  relayer-db:
    image: mysql:8.0
    container_name: relayer-db
    cap_add:
      - SYS_NICE
    restart: always
    env_file:
      - .env
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-data:/var/lib/mysql
    networks:
      - surge
    profiles:
      - relayer-init

  relayer-migrations:
    image: ghcr.io/kukymbr/goose-docker:3.22.1
    container_name: relayer-migrations
    environment:
      - GOOSE_DRIVER=mysql
      - GOOSE_DBSTRING=${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(relayer-db:3306)/${MYSQL_DATABASE}
    volumes:
      - ./migrations:/migrations
    networks:
      - surge
    profiles:
      - relayer-migrations

  relayer-rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: relayer-rabbitmq
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
      - 15672:15672
      - 15692:15692
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq/
      - ./rabbitmq/log/:/var/log/rabbitmq
    networks:
      - surge
    profiles:
      - relayer-init

  relayer-l1-processor:
    image: nethermind.jfrog.io/modular-oci-local-dev/relayer:sha-fbbab41
    container_name: relayer-l1-processor
    restart: always
    environment:
      - L1_SIGNAL_SERVICE=${L1_SIGNAL_SERVICE:-0xefc92277E9166C27529CCD889143C6d4B6171595}
    entrypoint: ["/usr/local/bin/relayer"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 6063:6063
    command:
      - processor
      - --queue.prefetch=${QUEUE_PREFETCH}
      - --db.host=relayer-db
      - --db.maxIdleConns=${MYSQL_MAX_IDLE_CONNS}
      - --db.maxOpenConns=${MYSQL_MAX_OPEN_CONNS}
      - --db.name=${MYSQL_DATABASE}
      - --db.password=${MYSQL_PASSWORD}
      - --db.username=${MYSQL_USER}
      - --queue.host=relayer-rabbitmq
      - --queue.password=${RABBITMQ_PASSWORD}
      - --queue.port=${RABBITMQ_PORT}
      - --queue.username=${RABBITMQ_USER}
      - --processorPrivateKey=${PROCESSOR_PRIVATE_KEY}
      - --srcSignalServiceAddress=${L1_SIGNAL_SERVICE}
      - --srcRpcUrl=http://host.docker.internal:32003
      - --destBridgeAddress=${L2_BRIDGE}
      - --destERC20VaultAddress=${L2_ERC20_VAULT}
      - --destERC721Address=${L2_ERC721_VAULT}
      - --destERC1155Address=${L2_ERC1155_VAULT}
      - --destTaikoAddress=${TAIKO_ANCHOR}
      - --destRpcUrl=http://nethermind_execution_client:${L2_HTTP_PORT}
      - --confirmations=${CONFIRMATIONS_BEFORE_PROCESSING:-0}
      - --headerSyncInterval=${HEADER_SYNC_INTERVAL_IN_SECONDS:-2}
      - --profitableOnly=${PROFITABLE_ONLY:-false}
      - --tx.minTipCap=${TX_MIN_TIP_CAP:-0.01}
      - --metrics.port=6063
    networks:
      - surge
    labels:
      com.kurtosistech.custom.metrics_enabled: "true"
      com.kurtosistech.custom.metrics_port: "6063"
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - relayer-l1

  relayer-l1-indexer:
    image: nethermind.jfrog.io/modular-oci-local-dev/relayer:sha-fbbab41
    container_name: relayer-l1-indexer
    restart: always
    env_file:
      - .env
    environment:
      - TAIKO_INBOX=${TAIKO_INBOX:-0xC3c933d714FbD79e1D6cA89AA1126FC52a64873b}
      - L1_SIGNAL_SERVICE=${L1_SIGNAL_SERVICE:-0xefc92277E9166C27529CCD889143C6d4B6171595}
      - L1_BRIDGE=${L1_BRIDGE:-0x75689954C665396167a6D372aC9154814FD30Fa4}
    entrypoint: ["/usr/local/bin/relayer"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 6064:6064
    command:
      - indexer
      - --db.host=relayer-db
      - --db.connMaxLifetime=${MYSQL_CONN_MAX_LIFETIME}
      - --db.maxIdleConns=${MYSQL_MAX_IDLE_CONNS}
      - --db.maxOpenConns=${MYSQL_MAX_OPEN_CONNS}
      - --db.name=${MYSQL_DATABASE}
      - --db.password=${MYSQL_PASSWORD}
      - --db.username=${MYSQL_USER}
      - --queue.host=relayer-rabbitmq
      - --queue.password=${RABBITMQ_PASSWORD}
      - --queue.port=${RABBITMQ_PORT}
      - --queue.username=${RABBITMQ_USER}
      - --srcBridgeAddress=${L1_BRIDGE}
      - --srcTaikoAddress=${TAIKO_INBOX}
      - --srcSignalServiceAddress=${L1_SIGNAL_SERVICE}
      - --srcRpcUrl=http://host.docker.internal:32003
      - --destBridgeAddress=${L2_BRIDGE}
      - --destRpcUrl=http://nethermind_execution_client:${L2_HTTP_PORT}
      - --maxNumGoroutines=${NUM_GOROUTINES}
      - --blockBatchSize=${BLOCK_BATCH_SIZE}
      - --event=MessageSent
      - --confirmations=${CONFIRMATIONS_BEFORE_PROCESSING:-0}
      - --metrics.port=6064
    networks:
      - surge
    labels:
      com.kurtosistech.custom.metrics_enabled: "true"
      com.kurtosistech.custom.metrics_port: "6064"
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - relayer-l1

  relayer-l1-api:
    image: nethermind.jfrog.io/modular-oci-local-dev/relayer:sha-fbbab41
    container_name: relayer-l1-api
    restart: always
    env_file:
      - .env
    entrypoint: ["/usr/local/bin/relayer"]
    ports:
      - 4102:4102
      - 6065:6065
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      - api
      - --db.host=relayer-db
      - --db.connMaxLifetime=${MYSQL_CONN_MAX_LIFETIME}
      - --db.maxIdleConns=${MYSQL_MAX_IDLE_CONNS}
      - --db.maxOpenConns=${MYSQL_MAX_OPEN_CONNS}
      - --db.name=${MYSQL_DATABASE}
      - --db.password=${MYSQL_PASSWORD}
      - --db.username=${MYSQL_USER}
      - --srcRpcUrl=http://host.docker.internal:32003
      - --destRpcUrl=http://nethermind_execution_client:${L2_HTTP_PORT}
      - --destTaikoAddress=${TAIKO_ANCHOR}
      - --processingFeeMultiplier=${PROCESSING_FEE_MULTIPLIER}
      - --metrics.port=6065
    networks:
      - surge
    labels:
      com.kurtosistech.custom.metrics_enabled: "true"
      com.kurtosistech.custom.metrics_port: "6065"
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - relayer-api

  relayer-l2-api:
    image: nethermind.jfrog.io/modular-oci-local-dev/relayer:sha-fbbab41
    container_name: relayer-l2-api
    restart: always
    environment:
      - TAIKO_INBOX=${TAIKO_INBOX:-0xC3c933d714FbD79e1D6cA89AA1126FC52a64873b}
    entrypoint: ["/usr/local/bin/relayer"]
    ports:
      - 4103:4103
      - 6066:6066
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      - api
      - --db.host=relayer-db
      - --db.connMaxLifetime=${MYSQL_CONN_MAX_LIFETIME}
      - --db.maxIdleConns=${MYSQL_MAX_IDLE_CONNS}
      - --db.maxOpenConns=${MYSQL_MAX_OPEN_CONNS}
      - --db.name=${MYSQL_DATABASE}
      - --db.password=${MYSQL_PASSWORD}
      - --db.username=${MYSQL_USER}
      - --srcRpcUrl=http://nethermind_execution_client:${L2_HTTP_PORT}
      - --destRpcUrl=http://host.docker.internal:32003
      - --destTaikoAddress=${TAIKO_INBOX}
      - --processingFeeMultiplier=${PROCESSING_FEE_MULTIPLIER}
      - --metrics.port=6066
    networks:
      - surge
    labels:
      com.kurtosistech.custom.metrics_enabled: "true"
      com.kurtosistech.custom.metrics_port: "6066"
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - relayer-api

  relayer-l2-processor:
    image: nethermind.jfrog.io/modular-oci-local-dev/relayer:sha-fbbab41
    container_name: relayer-l2-processor
    restart: always
    environment:
      - TAIKO_INBOX=${TAIKO_INBOX:-0xC3c933d714FbD79e1D6cA89AA1126FC52a64873b}
      - L1_BRIDGE=${L1_BRIDGE:-0x75689954C665396167a6D372aC9154814FD30Fa4}
      - L1_ERC20_VAULT=${L1_ERC20_VAULT:-0x56e51543785bb41f8f6244aaF09a410d2C22D9A4}
      - L1_ERC721_VAULT=${L1_ERC721_VAULT:-0xB00AF8098B4d949AC0C8bfcf5eaCd4FF07d05D28}
      - L1_ERC1155_VAULT=${L1_ERC1155_VAULT:-0x2dEf0967ccF7F1C5088Afe17ba0eF3D54409c503}
    entrypoint: ["/usr/local/bin/relayer"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 6067:6067
    command:
      - processor
      - --queue.prefetch=100
      - --db.host=relayer-db
      - --db.maxIdleConns=${MYSQL_MAX_IDLE_CONNS}
      - --db.maxOpenConns=${MYSQL_MAX_OPEN_CONNS}
      - --db.name=${MYSQL_DATABASE}
      - --db.password=${MYSQL_PASSWORD}
      - --db.username=${MYSQL_USER}
      - --queue.host=relayer-rabbitmq
      - --queue.password=${RABBITMQ_PASSWORD}
      - --queue.port=${RABBITMQ_PORT}
      - --queue.username=${RABBITMQ_USER}
      - --processorPrivateKey=${PROCESSOR_PRIVATE_KEY}
      - --srcSignalServiceAddress=${L2_SIGNAL_SERVICE}
      - --srcRpcUrl=http://nethermind_execution_client:${L2_HTTP_PORT}
      - --destBridgeAddress=${L1_BRIDGE}
      - --destERC20VaultAddress=${L1_ERC20_VAULT}
      - --destERC721Address=${L1_ERC721_VAULT}
      - --destERC1155Address=${L1_ERC1155_VAULT}
      - --destTaikoAddress=${TAIKO_INBOX}
      - --destRpcUrl=http://host.docker.internal:32003
      - --confirmations=${CONFIRMATIONS_BEFORE_PROCESSING:-0}
      - --headerSyncInterval=${HEADER_SYNC_INTERVAL_IN_SECONDS:-2}
      - --profitableOnly=${PROFITABLE_ONLY:-false}
      - --tx.minTipCap=${TX_MIN_TIP_CAP:-0.01}
      - --metrics.port=6067
    networks:
      - surge
    labels:
      com.kurtosistech.custom.metrics_enabled: "true"
      com.kurtosistech.custom.metrics_port: "6067"
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - relayer-l2

  relayer-l2-indexer:
    image: nethermind.jfrog.io/modular-oci-local-dev/relayer:sha-fbbab41
    container_name: relayer-l2-indexer
    restart: always
    environment:
      - L1_BRIDGE=${L1_BRIDGE:-0x75689954C665396167a6D372aC9154814FD30Fa4}
    entrypoint: ["/usr/local/bin/relayer"]
    ports:
      - 6068:6068
    command:
      - indexer
      - --db.host=relayer-db
      - --db.connMaxLifetime=${MYSQL_CONN_MAX_LIFETIME}
      - --db.maxIdleConns=${MYSQL_MAX_IDLE_CONNS}
      - --db.maxOpenConns=${MYSQL_MAX_OPEN_CONNS}
      - --db.name=${MYSQL_DATABASE}
      - --db.password=${MYSQL_PASSWORD}
      - --db.username=${MYSQL_USER}
      - --queue.host=relayer-rabbitmq
      - --queue.password=${RABBITMQ_PASSWORD}
      - --queue.port=${RABBITMQ_PORT}
      - --queue.username=${RABBITMQ_USER}
      - --srcBridgeAddress="0x7633740000000000000000000000000000000001"
      - --srcSignalServiceAddress="0x7633740000000000000000000000000000000005"
      - --srcRpcUrl=http://nethermind_execution_client:${L2_HTTP_PORT}
      - --destBridgeAddress="0x75689954C665396167a6D372aC9154814FD30Fa4"
      - --destRpcUrl=http://host.docker.internal:32003
      - --maxNumGoroutines=${NUM_GOROUTINES}
      - --blockBatchSize=${BLOCK_BATCH_SIZE}
      - --event=MessageSent
      - --confirmations=${CONFIRMATIONS_BEFORE_PROCESSING:-0}
      - --metrics.port=6068
    networks:
      - surge
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      com.kurtosistech.custom.metrics_enabled: "true"
      com.kurtosistech.custom.metrics_port: "6068"
      com.kurtosistech.custom.logs_enabled: "true"
      com.kurtosistech.custom.custom_network: "devnet"
    profiles:
      - relayer-l2

networks:
  surge:
    name: surge-network
