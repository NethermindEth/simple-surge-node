services:
  l2_execution_engine:
    image: nethswitchboard/taiko-geth:surge
    restart: unless-stopped
    pull_policy: always
    env_file:
      - .env
    stop_grace_period: 3m
    volumes:
      - l2_execution_engine_data:/data/taiko-geth
    ports:
      - "6061:6060"
      - "8549:8545"
      - "8550:8546"
      - "30307:30306"
      - "30307:30306/udp"
    command: |
      --taiko
      --networkid 763374
      --gcmode archive
      --datadir /data/taiko-geth
      --metrics
      --metrics.addr "0.0.0.0"
      --authrpc.addr "0.0.0.0"
      --authrpc.vhosts "*"
      --http
      --http.api debug,eth,net,web3,txpool,taiko
      --http.addr "0.0.0.0"
      --http.vhosts "*"
      --ws
      --ws.api debug,eth,net,web3,txpool,taiko
      --ws.addr "0.0.0.0"
      --ws.origins "*"
      --gpo.defaultprice "10000000"
      --port 30306
      --discovery.port 30306
      ${GETH_ADDITIONAL_ARGS:-}

  taiko_client_driver:
    image: nethsurge/taiko-client:f042ca8
    # us-docker.pkg.dev/evmchain/images/taiko-client:taiko-client-v0.39.2
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - l2_execution_engine
    env_file:
      - .env
    volumes:
      - l2_execution_engine_data:/data/taiko-geth
    entrypoint:
      - taiko-client
    command:
      - driver
      - --l1.ws=${L1_ENDPOINT_WS}
      - --l2.ws=ws://l2_execution_engine:8546
      - --l1.beacon=${L1_BEACON_HTTP}
      - --l2.auth=http://l2_execution_engine:8551
      - --taikoL1=${TAIKO_L1_ADDRESS}
      - --taikoL2=${TAIKO_L2_ADDRESS}
      - --jwtSecret=/data/taiko-geth/geth/jwtsecret

  taiko_client_prover_relayer:
    image: nethsurge/taiko-client:f042ca8
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - l2_execution_engine
      - taiko_client_driver
    ports:
      - "9877:9876"
    env_file:
      - .env
    entrypoint:
      - taiko-client
    command:
      - prover
      - --l1.ws=${L1_ENDPOINT_WS}
      - --l2.ws=ws://l2_execution_engine:8546
      - --l2.http=http://l2_execution_engine:8545
      - --taikoL1=${TAIKO_L1_ADDRESS}
      - --taikoL2=${TAIKO_L2_ADDRESS}
      # use the same private key as the proposer
      - --l1.proverPrivKey=${L1_PROPOSER_PRIVATE_KEY}
      - --prover.capacity=${PROVER_CAPACITY}
      - --raiko.host=${SGX_RAIKO_HOST}

volumes:
  l2_execution_engine_data:
