services:
  l2_execution_engine:
    image: nethswitchboard/taiko-geth:surge
    restart: unless-stopped
    pull_policy: always
    env_file:
      - .env
    stop_grace_period: 3m
    volumes:
      - l2_execution_engine_data:/data/taiko-geth
    ports:
      - "6061:6060"
      - "8547:8545"
      - "8548:8546"
      - "8551:8551"
      - "30307:30306"
      - "30307:30306/udp"
    command: |
      --taiko
      --networkid 763374
      --gcmode archive
      --datadir /data/taiko-geth
      --metrics
      --metrics.addr "0.0.0.0"
      --authrpc.addr "0.0.0.0"
      --authrpc.vhosts "*"
      --http
      --http.api debug,eth,net,web3,txpool,taiko
      --http.addr "0.0.0.0"
      --http.vhosts "*"
      --ws
      --ws.api debug,eth,net,web3,txpool,taiko
      --ws.addr "0.0.0.0"
      --ws.origins "*"
      --gpo.defaultprice "10000000"
      --port 30306
      --discovery.port 30306
      ${GETH_ADDITIONAL_ARGS:-}
    networks:
      - surge
    profiles:
      - l2_execution_engine
      - prover
      - proposer

  taiko_client_driver:
    image: nethsurge/taiko-client:composite-proof
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - l2_execution_engine
    env_file:
      - .env
    volumes:
      - l2_execution_engine_data:/data/taiko-geth
    entrypoint:
      - taiko-client
    command:
      - driver
      - --l1.ws=${L1_ENDPOINT_WS}
      - --l2.ws=ws://l2_execution_engine:8546
      - --l1.beacon=${L1_BEACON_HTTP}
      - --l2.auth=http://l2_execution_engine:8551
      - --taikoL1=${TAIKO_L1_ADDRESS}
      - --taikoL2=${TAIKO_L2_ADDRESS}
      - --jwtSecret=/data/taiko-geth/geth/jwtsecret
    networks:
      - surge
    profiles:
      - l2_execution_engine
      - prover
      - proposer

  taiko_client_proposer:
    image: nethsurge/taiko-client:composite-proof
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - l2_execution_engine
      - taiko_client_driver
    env_file:
      - .env
    entrypoint:
      - taiko-client
    command:
      - proposer
      - --l1.ws=${L1_ENDPOINT_WS}
      - --l2.http=http://l2_execution_engine:8545
      - --l2.auth=http://l2_execution_engine:8551
      - --taikoL1=${TAIKO_L1_ADDRESS}
      - --taikoL2=${TAIKO_L2_ADDRESS}
      - --jwtSecret=/data/taiko-geth/geth/jwtsecret
      - --l1.proposerPrivKey=${L1_PROPOSER_PRIVATE_KEY}
      - --l2.suggestedFeeRecipient=${L2_SUGGESTED_FEE_RECIPIENT}
      - --tx.notInMempoolTimeout=30s
      - --tx.resubmissionTimeout=10s
      - --epoch.interval=5s
      - --checkProfitability=false
    networks:
      - surge
    profiles:
      - proposer

  taiko_client_prover_relayer:
    image: nethsurge/taiko-client:composite-proof
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - l2_execution_engine
      - taiko_client_driver
    env_file:
      - .env
    entrypoint:
      - taiko-client
    command:
      - prover
      - --l1.ws=${L1_ENDPOINT_WS}
      - --l2.ws=ws://l2_execution_engine:8546
      - --l2.http=http://l2_execution_engine:8545
      - --taikoL1=${TAIKO_L1_ADDRESS}
      - --taikoL2=${TAIKO_L2_ADDRESS}
      - --l1.proverPrivKey=${L1_PROVER_PRIVATE_KEY}
      - --prover.capacity=${PROVER_CAPACITY}
      - --tx.notInMempoolTimeout=30s
      - --tx.resubmissionTimeout=10s
      - --sgxVerifier=${SGX_VERIFIER}
      - --sp1Verifier=${SP1_VERIFIER}
      - --risc0Verifier=${RISC0_VERIFIER}
      - --raiko.host.zkvm=${RAIKO_HOST_ZKVM}
      - --raiko.host=${SGX_RAIKO_HOST}
      - --raiko.requestTimeout=${RAIKO_REQUEST_TIMEOUT}
      - --verbosity=4
    profiles:
      - prover

  taiko-set-bridge-address:
    image: nethsurge/protocol:composite-proof-debug
    environment:
      FOUNDRY_PROFILE: layer1
      DOMAIN: ${L1_CHAIN_ID}
      ADDRESS: 0x72bCbB3f339aF622c28a26488Eed9097a2977404
      NAME: 0x6272696467650000000000000000000000000000000000000000000000000000
      PROXY_ADDRESS: 0x7633740000000000000000000000000000000006
      FORK_URL: http://l2_execution_engine:8545
      PRIVATE_KEY: ${OWNER_PRIVATE_KEY}
    entrypoint:
      - sh
      - -c
    command: >
      'forge script ./script/shared/SetAddress.s.sol --fork-url http://l2_execution_engine:8545 --broadcast -vvv'
    networks:
      - surge
    profiles:
      - set-bridge

  taiko-set-signal-service-address:
    image: nethsurge/protocol:composite-proof-debug
    environment:
      FOUNDRY_PROFILE: layer1
      DOMAIN: ${L1_CHAIN_ID}
      ADDRESS: 0x00c042C4D5D913277CE16611a2ce6e9003554aD5
      NAME: 0x7369676e616c5f73657276696365000000000000000000000000000000000000
      PROXY_ADDRESS: 0x7633740000000000000000000000000000000006
      FORK_URL: http://l2_execution_engine:8545
      PRIVATE_KEY: ${OWNER_PRIVATE_KEY}
    entrypoint:
      - sh
      - -c
    command: >
      'forge script ./script/shared/SetAddress.s.sol --fork-url http://l2_execution_engine:8545 --broadcast -vvv'
    networks:
      - surge
    profiles:
      - set-signal-service

  taiko-blockscout-postgres:
    image: postgres:alpine
    container_name: taiko-blockscout-postgres
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - l2_execution_engine
      - taiko_client_driver
    volumes:
      - ./blockscout-postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: blockscout
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: MyPassword1!
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      GOSU_VERSION: 1.17
      PG_MAJOR: 17
      PG_VERSION: 17.0
      PG_SHA256: 7e276131c0fdd6b62588dbad9b3bb24b8c3498d5009328dba59af16e819109de
      DOCKER_PG_LLVM_DEPS: llvm15-dev \t\tclang15
      PGDATA: /var/lib/postgresql/data
    command:
      - "-c"
      - "max_connections=1000"
    networks:
      - surge
    profiles:
      - blockscout

  taiko-blockscout-verif:
    image: ghcr.io/blockscout/smart-contract-verifier:v1.6.0
    container_name: taiko-blockscout-verif
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - l2_execution_engine
      - taiko_client_driver
    ports:
      - 8050:8050
    environment:
      SMART_CONTRACT_VERIFIER__SERVER__HTTP__ADDR: 0.0.0.0:8050
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      APP_USER: app
      SMART_CONTRACT_VERIFIER__SOLIDITY__ENABLED: true
      SMART_CONTRACT_VERIFIER__SOLIDITY__FETCHER__LIST__LIST_URL: https://solc-bin.ethereum.org/linux-amd64/list.json
    command:
      - "./smart-contract-verifier-server"
    networks:
      - surge
    profiles:
      - blockscout

  taiko-blockscout:
    image: blockscout/blockscout:6.6.0
    container_name: taiko-blockscout
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - l2_execution_engine
      - taiko_client_driver
    ports:
      - 4000:4000
    environment:
      DATABASE_URL: postgresql://postgres:MyPassword1!@taiko-blockscout-postgres:5432/blockscout
      API_V2_ENABLED: true
      ETHEREUM_JSONRPC_VARIANT: nethermind
      MICROSERVICE_SC_VERIFIER_URL: http://taiko-blockscout-verif:8050/api
      ETHEREUM_JSONRPC_HTTP_URL: http://l2_execution_engine:8545/
      INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: true
      SUBNETWORK: Kurtosis
      ETHEREUM_JSONRPC_TRACE_URL: http://l2_execution_engine:8545/
      COIN: ETH
      MICROSERVICE_SC_VERIFIER_TYPE: sc_verifier
      PORT: 4000
      MICROSERVICE_SC_VERIFIER_ENABLED: true
      ECTO_USE_SSL: false
      SECRET_KEY_BASE: 56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN
      CHAIN_ID: 763374
      SHOW_TESTNET_LABEL: true
      DISABLE_EXCHANGE_RATES: true
      DISABLE_KNOWN_TOKENS: true
      INDEXER_INTERNAL_TRANSACTIONS_BATCH_SIZE: 10000
      INDEXER_HIDE_INDEXING_PROGRESS_ALERT: false
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      RELEASE_VERSION: 6.6.0
      CHAIN_TYPE:
      BRIDGED_TOKENS_ENABLED:
      BLOCKSCOUT_VERSION: v6.6.0-beta
      SMART_CONTRACT_VERIFIER__SOLIDITY__ENABLED: true
      SMART_CONTRACT_VERIFIER__SOLIDITY__FETCHER__LIST__LIST_URL: https://solc-bin.ethereum.org/linux-amd64/list.json
    command:
      - "/bin/sh"
      - "-c"
      - "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    networks:
      - surge
    profiles:
      - blockscout
volumes:
  l2_execution_engine_data:
